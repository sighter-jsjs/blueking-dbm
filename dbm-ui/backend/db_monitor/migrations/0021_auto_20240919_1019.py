# Generated by Django 3.2.25 on 2024-09-19 02:19

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("db_monitor", "0020_auto_20240621_1216"),
    ]

    operations = [
        migrations.CreateModel(
            name="MySQLAutofixTodo",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("creator", models.CharField(max_length=64, verbose_name="创建人")),
                ("create_at", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
                ("updater", models.CharField(max_length=64, verbose_name="修改人")),
                ("update_at", models.DateTimeField(auto_now=True, verbose_name="更新时间")),
                ("bk_cloud_id", models.IntegerField(default=0)),
                ("bk_biz_id", models.IntegerField(default=0)),
                ("cluster_id", models.IntegerField(default=0)),
                ("immute_domain", models.CharField(default="", max_length=255)),
                (
                    "cluster_type",
                    models.CharField(
                        choices=[
                            ("tendbsingle", "MySQL单节点集群"),
                            ("tendbha", "MySQL高可用集群"),
                            ("tendbcluster", "TendbCluster集群"),
                            ("tbinlogdumper", "TBinlogDumper"),
                            ("redis", "Redis"),
                            ("PredixyRedisCluster", "RedisCluster集群"),
                            ("PredixyTendisplusCluster", "Tendisplus存储版集群"),
                            ("TwemproxyRedisInstance", "TendisCache集群"),
                            ("TwemproxyTendisSSDInstance", "TendisSSD集群"),
                            ("TwemproxyTendisplusInstance", "Tendis存储版集群"),
                            ("RedisInstance", "RedisCache主从版"),
                            ("TendisSSDInstance", "TendisSSD主从版"),
                            ("TendisplusInstance", "Tendisplus主从版"),
                            ("RedisCluster", "RedisCluster集群"),
                            ("TendisplusCluster", "TendisplusCluster集群"),
                            ("TendisplusInstance", "Tendisplus存储版集群"),
                            ("RedisInstance", "TendisCache集群"),
                            ("TendisSSDInstance", "TendisSSD集群"),
                            ("es", "ES集群"),
                            ("kafka", "Kafka集群"),
                            ("hdfs", "Hdfs集群"),
                            ("influxdb", "Influxdb实例"),
                            ("pulsar", "Pulsar集群"),
                            ("doris", "Doris集群"),
                            ("vm", "vm集群"),
                            ("dbmon", "redis监控"),
                            ("MongoReplicaSet", "Mongo副本集"),
                            ("MongoShardedCluster", "Mongo分片集群"),
                            ("riak", "Riak集群"),
                            ("sqlserver_single", "sqlserver单节点版"),
                            ("sqlserver_ha", "sqlserver主从版"),
                        ],
                        default="",
                        max_length=64,
                    ),
                ),
                (
                    "machine_type",
                    models.CharField(
                        choices=[
                            ("spider", "spider"),
                            ("remote", "remote"),
                            ("proxy", "proxy"),
                            ("backend", "backend"),
                            ("single", "single"),
                            ("predixy", "predixy"),
                            ("twemproxy", "twemproxy"),
                            ("redis", "redis"),
                            ("tendiscache", "tendiscache"),
                            ("tendisssd", "tendisssd"),
                            ("tendisplus", "tendisplus"),
                            ("es_datanode", "es_datanode"),
                            ("es_master", "es_master"),
                            ("es_client", "es_client"),
                            ("broker", "broker"),
                            ("zookeeper", "zookeeper"),
                            ("hdfs_master", "hdfs_master"),
                            ("hdfs_datanode", "hdfs_datanode"),
                            ("mongos", "mongos"),
                            ("mongodb", "mongodb"),
                            ("mongo_config", "mongo_config"),
                            ("influxdb", "influxdb"),
                            ("pulsar_zookeeper", "pulsar_zookeeper"),
                            ("pulsar_bookkeeper", "pulsar_bookkeeper"),
                            ("pulsar_broker", "pulsar_broker"),
                            ("riak", "riak"),
                            ("doris_backend", "doris_backend"),
                            ("doris_follower", "doris_follower"),
                            ("doris_observer", "doris_observer"),
                            ("sqlserver_single", "sqlserver_single"),
                            ("sqlserver_ha", "sqlserver_ha"),
                            ("vmstorage", "vmstorage"),
                            ("vminsert", "vminsert"),
                            ("vmselect", "vmselect"),
                            ("vmauth", "vmauth"),
                            ("tbinlogdumper", "TBinlogDumper"),
                        ],
                        default="",
                        max_length=64,
                    ),
                ),
                (
                    "instance_role",
                    models.CharField(
                        choices=[
                            ("orphan", "orphan"),
                            ("backend_master", "Master"),
                            ("backend_repeater", "Repeater"),
                            ("backend_slave", "Slave"),
                            ("remote_master", "Remote Master"),
                            ("remote_repeater", "Remote Repeater"),
                            ("remote_slave", "Remote Slave"),
                            ("proxy", "Proxy"),
                            ("redis_master", "Master"),
                            ("redis_slave", "Slave"),
                            ("es_datanode_hot", "热节点"),
                            ("es_datanode_cold", "冷节点"),
                            ("es_master", "Master 节点"),
                            ("es_client", "Client 节点"),
                            ("broker", "Broker"),
                            ("zookeeper", "Zookeeper"),
                            ("hdfs_namenode", "NameNode"),
                            ("hdfs_zookeeper", "Zookeeper"),
                            ("hdfs_journalnode", "Journalnode"),
                            ("hdfs_datanode", "DataNode"),
                            ("influxdb", "influxdb"),
                            ("pulsar_bookkeeper", "Bookkeeper"),
                            ("pulsar_zookeeper", "Zookeeper"),
                            ("pulsar_broker", "Broker"),
                            ("doris_backend_hot", "热节点"),
                            ("doris_backend_cold", "冷节点"),
                            ("doris_follower", "Follower"),
                            ("doris_observer", "Observer"),
                            ("m1", "m1"),
                            ("m2", "m2"),
                            ("m3", "m3"),
                            ("m4", "m4"),
                            ("m5", "m5"),
                            ("m6", "m6"),
                            ("m7", "m7"),
                            ("m8", "m8"),
                            ("m9", "m9"),
                            ("m10", "m10"),
                            ("backup", "backup"),
                            ("riak_node", "Riak"),
                            ("vmstorage", "vmstorage"),
                            ("vminsert", "vminsert"),
                            ("vmselect", "vmselect"),
                            ("vmauth", "vmauth"),
                        ],
                        default="",
                        max_length=64,
                        null=True,
                    ),
                ),
                ("ip", models.GenericIPAddressField(default="")),
                ("port", models.IntegerField(default=0)),
                ("event_create_time", models.DateTimeField()),
                ("dbha_gm_ip", models.GenericIPAddressField(default="")),
                ("context_master_host", models.GenericIPAddressField(default="", null=True)),
                ("context_master_port", models.IntegerField(default=0, null=True)),
                ("context_master_log_file", models.CharField(default="", max_length=255, null=True)),
                ("context_master_log_pos", models.IntegerField(default=0, null=True)),
                ("inplace_ticket_id", models.BigIntegerField(default=0)),
                (
                    "inplace_ticket_status",
                    models.CharField(
                        choices=[
                            ("UNSUBMITTED", "未提交"),
                            ("SKIPPED", "跳过"),
                            ("PENDING", "等待中"),
                            ("RUNNING", "执行中"),
                            ("SUCCEEDED", "成功"),
                            ("FAILED", "失败"),
                            ("REVOKED", "撤销"),
                            ("TERMINATED", "终止"),
                        ],
                        default="UNSUBMITTED",
                        max_length=64,
                    ),
                ),
                ("replace_ticket_id", models.BigIntegerField(default=0)),
                (
                    "replace_ticket_status",
                    models.CharField(
                        choices=[
                            ("UNSUBMITTED", "未提交"),
                            ("SKIPPED", "跳过"),
                            ("PENDING", "等待中"),
                            ("RUNNING", "执行中"),
                            ("SUCCEEDED", "成功"),
                            ("FAILED", "失败"),
                            ("REVOKED", "撤销"),
                            ("TERMINATED", "终止"),
                        ],
                        default="UNSUBMITTED",
                        max_length=64,
                    ),
                ),
                (
                    "current_step",
                    models.CharField(
                        choices=[("IN_PLACE_AUTOFIX", "原地自愈"), ("REPLACE_NEW", "新机替换")],
                        default="IN_PLACE_AUTOFIX",
                        max_length=64,
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="mysqlautofixtodo",
            index=models.Index(
                fields=["inplace_ticket_status", "current_step", "inplace_ticket_id"],
                name="db_monitor__inplace_45d255_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="mysqlautofixtodo",
            index=models.Index(
                fields=["replace_ticket_status", "current_step", "replace_ticket_id"],
                name="db_monitor__replace_188286_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="mysqlautofixtodo",
            index=models.Index(fields=["inplace_ticket_id"], name="db_monitor__inplace_a1b225_idx"),
        ),
        migrations.AddIndex(
            model_name="mysqlautofixtodo",
            index=models.Index(fields=["replace_ticket_id"], name="db_monitor__replace_191a06_idx"),
        ),
    ]
