# Generated by Django 3.2.25 on 2025-06-04 10:17

from django.db import migrations, models

import backend.flow.consts
from backend.db_meta.enums import ClusterType
from backend.flow.consts import StateType


class Migration(migrations.Migration):

    dependencies = [
        ("db_meta", "0050_auto_20250508_2142"),
    ]

    operations = [
        migrations.CreateModel(
            name="RedisHotKeyDetail",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("creator", models.CharField(max_length=64, verbose_name="创建人")),
                ("create_at", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
                ("updater", models.CharField(max_length=64, verbose_name="修改人")),
                ("update_at", models.DateTimeField(auto_now=True, verbose_name="更新时间")),
                ("ticket_id", models.BigIntegerField(default=0, help_text="关联的单据id")),
                ("record_id", models.BigIntegerField(default=0, help_text="关联的记录id")),
                ("bk_biz_id", models.IntegerField(default=0, help_text="关联的业务id，对应cmdb")),
                ("cluster_id", models.IntegerField(default=0, help_text="集群ID")),
                ("ins", models.CharField(default="", help_text="实例", max_length=255)),
                ("key", models.CharField(default="", help_text="key", max_length=255)),
                ("cmd_info", models.CharField(default="", help_text="执行命令", max_length=255)),
                ("exec_count", models.IntegerField(default=0, help_text="数量")),
                ("ratio", models.CharField(default="", help_text="执行占比", max_length=64)),
            ],
            options={
                "verbose_name": "redis 热key分析记录详情表",
                "verbose_name_plural": "redis 热key分析记录详情表",
            },
        ),
        migrations.CreateModel(
            name="RedisHotKeyInfo",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("creator", models.CharField(max_length=64, verbose_name="创建人")),
                ("create_at", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
                ("updater", models.CharField(max_length=64, verbose_name="修改人")),
                ("update_at", models.DateTimeField(auto_now=True, verbose_name="更新时间")),
                ("bk_biz_id", models.IntegerField(default=0, help_text="关联的业务id，对应cmdb")),
                ("ins_list", models.JSONField(blank=True, default=list, help_text="实例列表", null=True)),
                ("cluster_id", models.IntegerField(default=0, help_text="集群ID")),
                (
                    "cluster_type",
                    models.CharField(
                        choices=ClusterType.get_choices(),
                        default="",
                        max_length=64,
                    ),
                ),
                ("immute_domain", models.CharField(default="", max_length=255)),
                ("analysis_time", models.IntegerField(default=10, help_text="分析时长")),
                ("ticket_id", models.PositiveIntegerField(default=0, help_text="关联的单据id")),
                ("root_id", models.CharField(default="", help_text="关联root_id", max_length=64)),
                (
                    "status",
                    models.CharField(
                        choices=StateType.get_choices(),
                        default=StateType.READY,
                        help_text="状态",
                        max_length=64,
                    ),
                ),
            ],
            options={
                "verbose_name": "redis 热key分析记录表",
                "verbose_name_plural": "redis 热key分析记录表",
            },
        ),
    ]
